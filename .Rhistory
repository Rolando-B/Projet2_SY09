2+2
load(iris)
data(iris)
"iris"
iris
barplot(summary(iris))
barplot(summary(iris$Species))
data(iris)
irix
iris
type(iris)
typeof(iris)
class(iris)
rbinom(1000,1,0.04)
sum(rbinom(1000,1,0.04))
sum(rbinom(100,1,0.04))
sum(rbinom(100,1,0.04))
sum(rbinom(100,1,0.04))
sum(rbinom(100,1,0.04))
sum(rbinom(100,1,0.04))
sum(rbinom(100,1,0.04))
sum(rbinom(100,1,0.04))
binom()
?binom
rbinom(1,1,0.5)
len(c(1,2,3))
length(c(1,2,3))
setwd("~/Documents/Drive/GI04/SY09/Projet_2")
library(e1071)
library(MASS)
source("functions/anadisc.R")
source("functions/mvdnorm.R")
source("functions/prob.ad.R")
source("functions/tree.rpart.R")
source("functions/prepare.R")
source("functions/separ2.R")
source("functions/distXY.R")
source("functions/protocole.R")
source("functions/protocole2.R")
source("functions/logistic.R")
source("functions/get.best.variables.R")
cancer <- read.csv("data/breastcancer.csv", header=T)
plop = cancer[2:32]
plop[,2]
plop
plop$X1
names(plop$X1)
rownames(plop$X1)
colnames(polp)
colnames(plop)
colnames(plop) - "Z"
colnames(plop)[-"Z"]
colnames(plop)[-1]
colnames(plop)[-1]
colnames(plop)
X = plop
names = colnames(X[1:length(X)-1])
names
z = X$Z
z
z = X[length(X)]
z
z = X[,length(X)]
z
name = names[1]
name
X[, X$Z == 2]
X[X$Z == 2,]
X[X$Z == 2,]$name
X[X$Z == 2,]
X[X$Z == 2,]
A = X[X$Z == 2,]
A$name
name
A$X1
A$"X1"
X[X$Z == 2,][,1]
mean(X[X$Z == 2,][,i])
i = 1
mean(X[X$Z == 2,][,i])
mean(scale(X[X$Z == 2,][,i])
)
z = X[,length(X)]
cbind(X[,i],z)
cbind(norm(X[,i]),z)
cbind(scale(X[,i]),z)
newX = cbind(norm(X[,i]),Z = z)
newX = cbind(norm(X[,i]),z)
X
names = colnames(X[1:length(X)-1])
z = X[,length(X)]
z
i = 1
newX = cbind(norm(X[,i]),z)
norm(X[,i])
X[,i]
newX = cbind(scale(X[,i]),z)
mean(newX[newX$z == 2,][,i])
newX[newX[,1] == 2,]
newX[newX[1,] == 2,]
newX[,newX[,1] == 2]
newX[,newX[1,] == 2]
newX = cbind(scale(X[,i]),z)
newX
newX[,1]
newX[,2]
newX[,2 == 2]
newX[,2 == 2][,i]
mean(newX[,2 == 2][,i])
meanclass2 = mean(newX[,2 == 1][,i])
mean(newX[,2 == 1][,i])
newX[,2 == 1][,i]
newX
newX[,2 == 1]
newX[,2]
newX[,2 == 1]
meanclass1 = mean(newX[,2 == 2][,i])
meanclass1
mean(newX[,2 == 2][,i])
(newX[,2 == 2][,i])
newX[,2]
newX[,2] == 1
newX[newX[,2] == 2]
newX[newX[,2] == 2][,1]
newX[,2]
newX[,2] == 2
newX[newX[,2] == 2]
newX[,newX[,2] == 2]
newX[newX[,2] == 2,]
newX[newX[,2] == 2,][,i]
newX[newX[,2] == 1,][,i]
newX[newX[,2] == 2,][,i]
meanclass1 = mean(newX[newX[,2] == 2,][,i])
meanclass2 = mean(newX[newX[,2] == 1,][,i])
meanclass1
meanclass2
dist(meanclass1,meanclass2)
abs(meanclass1 - meanclass2)
abs(meanclass2 - meanclass1)
source('~/Documents/Drive/GI04/SY09/Projet_2/functions/protocole2.R', echo=TRUE)
names = colnames(X[1:length(X)-1])
dists = matrix(0, length(X)-1, 2)
colnames(dists) = names
dists
dists = matrix(0,2, length(X)-1)
colnames(dists) = names
dists
dists["X1"]
dists[X1]
dists[,"X1"]
dists[,name]
names = colnames(X[1:length(X)-1])
dists = matrix(0,1, length(X)-1)
colnames(dists) = names
z = X[,length(X)]
i = 1
for (name in names){
newX = cbind(scale(X[,i]),z)
meanclass1 = mean(newX[newX[,2] == 2,][,i])
meanclass2 = mean(newX[newX[,2] == 1,][,i])
dists[,name] = abs(meanclass1 - meanclass2)
i = i+1
}
names = colnames(X[1:length(X)-1])
dists = matrix(0,1, length(X)-1)
colnames(dists) = names
z = X[,length(X)]
i = 1
z
i
for (name in names){
newX = cbind(scale(X[,i]),z)
meanclass1 = mean(newX[newX[,2] == 2,][,i])
meanclass2 = mean(newX[newX[,2] == 1,][,i])
dists[,name] = abs(meanclass1 - meanclass2)
i = i+1
}
newX = cbind(scale(X[,i]),z)
meanclass1 = mean(newX[newX[,2] == 2,][,i])
newX[newX[,2] == 2,]
z = X[,length(X)]
i = 1
for (name in names){
newX = cbind(scale(X[,i]),z)
meanclass1 = mean(newX[newX[,2] == 2,][,1])
meanclass2 = mean(newX[newX[,2] == 1,][,1])
dists[,name] = abs(meanclass1 - meanclass2)
i = i+1
}
dists
order(dists,decreasing = TRUE)[1:N]
N = 10
order(dists,decreasing = TRUE)[1:N]
dists
order(dists[,1],decreasing = TRUE)[1:N]
order(dists[1,],decreasing = TRUE)[1:N]
dists[,1]
dists[,1]
sort.default()
sort(dists)
which.max(dists)
which.max(dists,5)
order(dists[1,],decreasing = TRUE, drop=false)[1:N]
order(dists[1,],decreasing = TRUE, drop=FALSE)[1:N]
dists[order(dists),drop = FALSE]
dists[order(dists),decreasing = TRUE,drop = FALSE]
dists[order(dists, decreasing = TRYE),drop = FALSE]
dists[order(dists, decreasing = TRUE),drop = FALSE]
dists[order(dists, decreasing = TRUE),,drop = FALSE]
dists[order(dists, decreasing = TRUE),drop = FALSE]
apply(dists,2,sort)
apply(dists,1,sort)
apply(dists,1,sort)
rev(apply(dists,1,sort))
apply((apply(dists,1,sort),2,rev)
best = apply(dists,1,sort)
size = length(X) -1
best[length-N,size]
best[length-N:size]
best[size-N:size]
best[,size-N:size]
best[size-N:size,]
N
dists[size-N:size,]
best[size-N:size,]
dim(best[size-N:size,])
length(best[size-N:size,])
size
best[20:30]
best[,20:30]
best[20:30,]
size-N
size
best[size-N:size,]
a = best[(size-N):size]
a
a = best[(size-N):size,]
a
length(best)
size
best = apply(dists,1,sort)[(size-N):size]
best
best = apply(dists,1,sort)[(size-N):size,]
best
row.names(best)
col.names(best)
names(best)
library(e1071)
library(MASS)
source("functions/anadisc.R")
source("functions/mvdnorm.R")
source("functions/prob.ad.R")
source("functions/tree.rpart.R")
source("functions/prepare.R")
source("functions/separ2.R")
source("functions/distXY.R")
source("functions/protocole.R")
source("functions/protocole2.R")
source("functions/logistic.R")
source("functions/get.best.variables.R")
#1. Cancer
cancer <- read.csv("data/breastcancer.csv", header=T)
quadraticVariablesCancer <- get.best.variables(cancer[2:32])
XappCancer <- cancer[,2:31]
zappCancer <- cancer$Z
resCancer <- protocole2(XappCancer,zappCancer, quadraticVariablesCancer)
resCancer$mean
resCancer$sd
plot(prcomp(XappCancer)$x[,1], prcomp(XappCancer)$x[,2], col=c("red", "blue")[zappCancer])
library(e1071)
library(MASS)
library(e1071)
library(MASS)
source("functions/anadisc.R")
source("functions/mvdnorm.R")
source("functions/prob.ad.R")
source("functions/tree.rpart.R")
source("functions/prepare.R")
source("functions/separ2.R")
source("functions/distXY.R")
source("functions/protocole.R")
source("functions/protocole2.R")
source("functions/logistic.R")
source("functions/get.best.variables.R")
cancer <- read.csv("data/breastcancer.csv", header=T)
quadraticVariablesCancer <- get.best.variables(cancer[2:32])
XappCancer <- cancer[,2:31]
zappCancer <- cancer$Z
resCancer <- protocole2(XappCancer,zappCancer, quadraticVariablesCancer)
resCancer$mean
resCancer$sd
plot(prcomp(XappCancer)$x[,1], prcomp(XappCancer)$x[,2], col=c("red", "blue")[zappCancer])
library(fossil)
cancer <- read.csv("data/breastcancer.csv", header=T)
quadraticVariablesCancer <- get.best.variables(cancer[2:32])
XappCancer <- cancer[,2:31]
zappCancer <- cancer$Z
resCancer <- protocole2(XappCancer,zappCancer, quadraticVariablesCancer)
resCancer$mean
resCancer$sd
plot(prcomp(XappCancer)$x[,1], prcomp(XappCancer)$x[,2], col=c("red", "blue")[zappCancer])
#2. Ionosphere
iono <- read.csv("data/ionosphere.csv", header=T)
di = names(which(diag(cov(iono)) == 0)) #We remove columns with cov == 0
iono <- iono[,- which(names(iono) %in% di)]
XappIono <- iono[,3:34]
zappIono <- iono$Z
quadraticVariablesIono <- get.best.variables(cbind(XappIono,Z = zappIono),8)
resIono <- protocole2(XappIono,as.integer(zappIono), quadraticVariablesIono)
resIono$mean
resIono$sd
plot(prcomp(XappIono)$x[,1], prcomp(XappIono)$x[,2], col=c("red", "blue")[zappIono])
